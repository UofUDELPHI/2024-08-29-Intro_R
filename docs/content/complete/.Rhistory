head(gapminder_data[, 4])
head(gapminder_data[, "lifeExp"])
head(gapminder_data$lifeExp)
head(gapminder_data[4])
head(gapminder_data["lifeExp"])
head(gapminder_data[[4]])
head(gapminder_data[["lifeExp"]])
gapminder <- read.csv("data/gapminder.csv")
gapminder
# add a new column to gapminder_tmp called gap, which is the product of pop and gdpPercap
gapminder_tmp$gdp <- gapminder_tmp$gdpPercap * gapminder_tmp$pop
# create a copy of gapminder called gapminder_tmp
gapminder_tmp <- gapminder
# add a new column to gapminder_tmp called gap, which is the product of pop and gdpPercap
gapminder_tmp$gdp <- gapminder_tmp$gdpPercap * gapminder_tmp$pop
gapminder_tmp
head(gapminder[-3])
# create a copy of gapminder called gapminder_tmp
gapminder_tmp <- gapminder
# add a new column to gapminder_tmp called gap, which is the product of pop and gdpPercap
gapminder_tmp$gdp <- gapminder_tmp$gdpPercap * gapminder_tmp$pop
gapminder_tmp
gapminder_tmp
head(gapminder_tmp)
gapminder$country == "United States"
sum(gapminder$country == "United States")
# create vector is_usa
is_usa <- gapminder$country == "United States"
# test that is_usa contains at least some TRUE values
sum(is_usa)
gapminder[is_usa, ]
gapminder_tmp$lifeExp
gapminder_tmp$lifeExp <- round(gapminder_tmp$lifeExp)
gapminder_tmp$lifeExp <- round(gapminder_tmp$lifeExp)
gapminder_tmp
head(gapminder_tmp)
# reset gapminder_tmp
gapminder_tmp <- gapminder
gapminder_tmp[gapminder_tmp == "Australia", ]
gapminder_tmp[gapminder_tmp == "Australia", ]$lifeExp <- round(gapminder_tmp[gapminder_tmp == "Australia", ]$lifeExp)
gapminder_tmp
head(gapminder_tmp)
head(gapminder_tmp, 20)
head(gapminder_tmp, 100)
head(gapminder_tmp, 100)[, c("country", "lifeExp")]
# use read_csv() to load gapminder
gapminder <- read_csv("data/gapminder.csv")
# load the tidyverse library (or just dplyr)
# library(dplyr)
library(tidyverse)
# use read_csv() to load gapminder
gapminder <- read_csv("data/gapminder.csv")
gapminder
# look at the head() of gapminder
gapminder
# use select() to look at just the country, year, lifeExp columns
head(select(gapminder_data, country, year, lifeExp))
# use select() to look at just the country, year, lifeExp columns
select(gapminder, country, year, lifeExp)
select(gapminder, -continent, -year, -pop)
# use select() to rename lifeExp to life_exp and gdpPercap to gdp_per_cap (keeping all other columns)
select(gapminder, country, continent, year, life_exp = lifeExp, pop, gdp_per_cap = gdpPercap)
# use rename() to do the same thing more succinctly
rename(gapminder, life_exp = lifeExp, gdp_per_cap = gdpPercap)
# apply select to gapminder, year, and pop without the pipe
select(gapminder, year, pop)
# apply select to gapminder, year, and pop with the pipe
gapminder |> select(year, pop) |> head()
# base R
gapminder_tmp <- gapminder[-"continent"]
# base R
gapminder_tmp <- gapminder[, -"continent"]
gapminder
# base R
gapminder_tmp <- gapminder[, -2]
gapminder_tmp
# base R
gapminder_tmp <- gapminder[, -2]
gapminder_tmp$gdp_per_cap <- gapminder_tmp$gdpPercap
gapminder_tmp
# base R
gapminder_tmp <- gapminder[, -2]
gapminder_tmp$gdp_per_cap <- gapminder_tmp$gdpPercap
gapminder_tmp <- gapminder[, -5]
gapminder_tmp
# base R
gapminder_tmp <- gapminder[, -2]
gapminder_tmp$gdp_per_cap <- gapminder_tmp$gdpPercap
gapminder_tmp <- gapminder[, -5]
gapminder_tmp
# base R
gapminder_tmp <- gapminder[, -2]
gapminder_tmp$gdp_per_cap <- gapminder_tmp$gdpPercap
gapminder_tmp <- gapminder[, -5]
gapminder_tmp
gapminder_tmp <- gapminder_tmp[, -5]
gapminder_tmp
# base R
gapminder_tmp <- gapminder[, -2]
gapminder_tmp$gdp_per_cap <- gapminder_tmp$gdpPercap
gapminder_tmp <- gapminder_tmp[, -5]
gapminder_tmp
gapminder_tmp
# create a vector of country names
country_vec <- gapminder$country
# asking which entries in the vector are equal to "Australia"
country_vec == "Australia"
# create a vector of country names
country_vec <- gapminder$country
# asking which entries in the vector are equal to "Australia"
country_vec == "Australia"
# create vector is_usa
is_aus <- gapminder$country == "Australia"
# test that is_usa contains at least some TRUE values
head(is_aus, 100)
sum(is_aus)
# use is_usa to filter to just the rows for the US
gapminder[is_aus, ]
# asking which entries in the country column are equal to "Australia"
gapminder$country == "Australia"
gapminder_oceania <- gapminder |>
filter(continent == "Oceania", year %in% c(1987, 1992)) |>
select(country, year, gdp_per_cap = gdpPercap)
gapminder_oceania
gapminder |> mutate(gdp = pop * gdpPercap)
gapminder |> mutate(gdp = pop * gdpPercap)
gapminder_tmp <- gapminder |> mutate(lifeExp = round(lifeExp))
head(gapminder_tmp)
gapminder
gapminder_tmp <- gapminder_tmp |> mutate(deathExp = year + lifeExp)
head(gapminder_tmp)
gapminder_tmp <- gapminder_tmp |> mutate(deathExp = year + lifeExp)
gapminder_tmp
gapminder |> summarize(mean_life_exp = mean(lifeExp))
gapminder |>
group_by(country) |>
summarize(max_pop = max(pop))
gapminder |>
group_by(continent) |>
mutate(mean_life_exp = mean(lifeExp))
# try to summarize the mean gdpPercap value without ungrouping. Then ungroup!
gapminder |>
group_by(continent) |>
mutate(mean_life_exp = mean(lifeExp)) |>
ungroup() |>
summarize(mean(gdpPercap))
# try to summarize the mean gdpPercap value without ungrouping. Then ungroup!
gapminder |>
group_by(continent) |>
mutate(mean_life_exp = mean(lifeExp)) |>
summarize(mean(gdpPercap))
gapminder |>
filter(continent == "Asia", year >= 2000) |>
group_by(country) |>
summarize(mean_life_exp = mean(lifeExp))
# compute the average life expectancy for each continent-year combination
gapminder |> group_by(continent, year) |>
summarize(mean_life_exp = mean(lifeExp))
# asking which entries in the country column are equal to "Australia"
head(gapminder$country == "Australia", 100)
# load the tidyverse, and gapminder dataset using read_csv()
library(tidyverse)
gapminder_data <- read_csv("data/gapminder.csv")
gapminder_data
ggplot(gapminder_data) +
geom_point(aes(x = gdpPercap, y = lifeExp))
ggplot(gapminder_data) +
geom_point(aes(x = pop, y = lifeExp))
ggplot(gapminder)
ggplot(gapminder_2007) +
geom_point(aes(x = gdpPercap, y = lifeExp, color = continent))
# Chunk 1
# load the tidyverse, and gapminder dataset using read_csv()
library(tidyverse)
gapminder <- read_csv("data/gapminder.csv")
gapminder
# Chunk 2
ggplot(gapminder)
# Chunk 3
# create a scatterplot of gdpPercap (x) against lifeExp (y)
ggplot(gapminder) +
geom_point(aes(x = gdpPercap, y = lifeExp))
# Chunk 4
ggplot(gapminder) +
geom_point(aes(x = pop, y = lifeExp))
# Chunk 5
gapminder |>
filter(year == 2007) |>
ggplot() +
geom_point(aes(x = pop, y = lifeExp))
gapminder_2007 <- gapminder |> filter(year == 2007)
ggplot(gapminder_2007) +
geom_point(aes(x = pop, y = lifeExp))
ggplot(gapminder_2007) +
geom_point(aes(x = gdpPercap, y = lifeExp, color = continent))
# 1
ggplot(gapminder_2007) +
geom_point(aes(x = gdpPercap,
y = lifeExp,
shape = continent))
# 2
ggplot(gapminder_2007) +
geom_point(aes(x = gdpPercap,
y = lifeExp),
shape = "square")
ggplot(gapminder_2007) +
geom_point(aes(x = gdpPercap, y = lifeExp),
alpha = 0.5)
ggplot(gapminder_2007) +
geom_point(aes(x = gdpPercap, y = lifeExp,
color = continent, size = pop),
alpha = 0.5)
gapminder |>
filter(continent == "Americas") |>
ggplot() +
geom_line(aes(x = year,
y = lifeExp,
group = country))
# create a line plot for each country in the Americas
gapminder |>
filter(continent == "Americas") |>
ggplot() +
geom_line(aes(x = year,
y = lifeExp,
group = country))
gapminder |>
group_by(continent, year) |>
summarize(mean_life_exp = mean(lifeExp)) |>
ggplot() +
geom_line(aes(x = year,
y = mean_life_exp,
color = continent))
gapminder |>
group_by(continent, year) |>
summarize(mean_life_exp = mean(lifeExp))
gapminder |>
group_by(continent, year) |>
summarize(mean_life_exp = mean(lifeExp)) |>
ggplot(aes(x = year,
y = mean_life_exp,
color = continent))
gapminder |>
group_by(continent, year) |>
summarize(mean_life_exp = mean(lifeExp)) |>
ggplot(aes(x = year,
y = mean_life_exp,
color = continent)) +
geom_line()
gapminder |>
group_by(continent, year) |>
summarize(mean_life_exp = mean(lifeExp)) |>
ggplot(aes(x = year,
y = mean_life_exp,
color = continent)) +
geom_line() +
geom_point()
gapminder |>
group_by(continent, year) |>
summarize(mean_life_exp = mean(lifeExp)) |>
ggplot() +
geom_line(aes(x = year,
y = mean_life_exp,
color = continent))
#
ggplot(gapminder_2007) +
geom_point(aes(x = gdpPercap,
y = lifeExp,
color = continent)) +
scale_x_log10()
# take your previous plot, add nice labels using `labs()`
# save the ggplot2 object as my_scatter
my_scatter <- ggplot(gapminder_2007) +
geom_point(aes(x = gdpPercap,
y = lifeExp,
color = continent)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy", title = "GDP per cap vs life expectancy")
my_scatter
my_scatter + theme_classic()
my_scatter + theme_bw()
my_scatter + theme_dark()
ggplot(gapminder_2007) +
geom_point(aes(x = gdpPercap,
y = lifeExp,
color = continent)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy", title = "GDP per cap vs life expectancy") +
theme_dark()
# create a line plot of lifeExp over time for each country, separately for each continent
ggplot(gapminder) +
geom_line(aes(x = year, y = lifeExp, group = country)) +
facet_wrap(~continent)
# create a line plot of lifeExp over time for each country, separately for each continent
ggplot(gapminder) +
geom_line(aes(x = year, y = lifeExp, group = country),
alpha = 0.5) +
facet_wrap(~continent)
# create a line plot of lifeExp over time for each country, separately for each continent
ggplot(gapminder) +
geom_line(aes(x = year, y = lifeExp, group = country),
alpha = 0.2) +
facet_wrap(~continent)
# create a line plot of lifeExp over time for each country, separately for each continent
ggplot(gapminder) +
geom_line(aes(x = year, y = lifeExp, group = country),
alpha = 0.2) +
facet_wrap(~continent, ncol = 2)
ggplot(gapminder) |>
geom_bar(aes(x = continent))
ggplot(gapminder) +
geom_bar(aes(x = continent))
gapminder |>
count(continent)
# count the number of times each continent appears
gapminder |>
count(continent)
ggplot(gapminder) +
geom_bar(aes(x = continent))
# arrange the rows of gapminder in decreasing order of lifeExp
gapminder |>
arrange(lifeExp)
# arrange the rows of gapminder in descending order of lifeExp
gapminder |>
arrange(desc(lifeExp))
# arrange the rows of gapminder in ascending order of lifeExp
gapminder |>
arrange(lifeExp)
# arrange the rows of gapminder in descending order of lifeExp
gapminder |>
arrange(desc(lifeExp))
gapminder |>
group_by(country) |>
summarize(mean_life_exp = mean(lifeExp)) |>
arrange(desc(mean_life_exp))
gapminder |>
group_by(country) |>
summarize(mean_life_exp = median(lifeExp)) |>
arrange(desc(pop))
gapminder |>
group_by(country) |>
summarize(mean_life_exp = median(lifeExp),
max_pop = max(pop)) |>
arrange(desc(max_pop))
gapminder |>
group_by(continent) |>
summarize(mean_lifeExp = mean(lifeExp)) |>
ggplot() +
geom_col(aes(x = continent, y = mean_life_exp))
gapminder |>
group_by(continent) |>
summarize(mean_life_exp = mean(lifeExp)) |>
ggplot() +
geom_col(aes(x = continent, y = mean_life_exp))
# (from the exercise above) compute the average lifeExp for each continent-year
# combination, then create a line plot of the mean_life_exp over time for each
# continent, and then
# add the points on top of the line
gapminder |>
group_by(continent, year) |>
summarize(mean_life_exp = mean(lifeExp)) |>
ggplot(aes(x = year,
y = mean_life_exp,
color = continent)) +
geom_line() +
geom_point()
# create a line plot of lifeExp over time for each country, separately for each continent
ggplot(gapminder) +
geom_line(aes(x = year, y = lifeExp, group = country),
alpha = 0.2) +
facet_wrap(~continent, ncol = 2)
# (from the exercise above) compute the average lifeExp for each continent-year
# combination, then create a line plot of the mean_life_exp over time for each
# continent, and then
# add the points on top of the line
gapminder |>
group_by(continent, year) |>
summarize(mean_life_exp = mean(lifeExp)) |>
ggplot(aes(x = year,
y = mean_life_exp,
color = continent)) +
geom_line() +
geom_point()
# create a bar chart of the average lifeExp for each continent using geom_col()
gapminder |>
group_by(continent) |>
summarize(mean_life_exp = mean(lifeExp)) |>
ggplot() +
geom_col(aes(x = continent, y = mean_life_exp))
gapminder |>
group_by(continent) |>
summarize(mean_life_exp = mean(lifeExp)) |>
ggplot() +
geom_col(aes(x = continent, y = mean_life_exp))
happiness <- read_csv("data/whr_2023.csv")
happiness
happiness <- read_csv("data/whr_2023.csv")
happiness
happiness |>
ggplot() +
geom_point(aes(x = freedom_to_make_life_choices, y = life_ladder))
happiness |>
filter(year = 2014) |>
ggplot() +
geom_point(aes(x = freedom_to_make_life_choices, y = life_ladder,
color = country_name))
happiness |>
filter(year = 2014) |>
ggplot() +
geom_point(aes(x = freedom_to_make_life_choices, y = life_ladder))
happiness |>
filter(year == 2014) |>
ggplot() +
geom_point(aes(x = freedom_to_make_life_choices, y = life_ladder))
happiness |>
filter(year == 2014) |>
ggplot() +
geom_point(aes(x = freedom_to_make_life_choices, y = life_ladder),
alpha = 0.5)
happiness |>
ggplot() +
geom_line(aes(x = year, y = life_ladder, group = country_name),
alpha = 0.5)
happiness |> map_dbl(~sum(is.na(.)))
happiness |> map_dbl(~sum(is.na(.)) / n())
happiness |> map_dbl(~sum(is.na(.)) / nrow(happiness)
)
ggplot() +
geom_line(aes(x = year, y = life_ladder),
alpha = 0.5)
happiness |>
filter(country_name == "Australia") |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
alpha = 0.5)
mean(c(1, 4, NA, 2))
mean(c(1, 4, NA, 2), na.rm = TRUE)
mean(c(1, 4, NA, 2))
mean(c(1, 4, NA, 2), na.rm = TRUE)
happiness |>
filter(country_name == "Australia") |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
alpha = 0.5)
happiness |>
filter(country_name == "Australia") |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
alpha = 0.5) +
theme_classic()
happiness |>
filter(country_name == "Australia") |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
alpha = 0.5) +
theme_classic() +
labs(x = "Year", y = "Happiness score", title = "Australia is becomming less happy over time")
happiness |>
filter(country_name == "Australia") |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
alpha = 0.5) +
theme_classic() +
labs(x = "Year", y = "Happiness score", title = "Australia's decreasing happiness trend")
happiness |>
filter(country_name == "Australia") |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
alpha = 0.5, col = "cornflowerblue") +
theme_classic() +
labs(x = "Year", y = "Happiness score", title = "Australia's decreasing happiness trend")
happiness |>
filter(country_name == "Australia") |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
col = "cornflowerblue") +
theme_classic() +
labs(x = "Year", y = "Happiness score", title = "Australia's decreasing happiness trend")
happiness |>
filter(country_name == "Australia", year >= 2010) |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
col = "cornflowerblue") +
theme_classic() +
labs(x = "Year", y = "Happiness score", title = "Australia's decreasing happiness trend")
happiness |>
filter(country_name == "Australia", year >= 2010) |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
col = "cornflowerblue", size = 1.5) +
theme_classic() +
labs(x = "Year", y = "Happiness score", title = "Australia's decreasing happiness trend")
happiness |>
filter(country_name == "Australia", year >= 2010) |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
col = "cornflowerblue", size = 1.2) +
theme_classic() +
labs(x = "Year", y = "Happiness score", title = "Australia's decreasing happiness trend")
happiness |>
filter(country_name == "Australia", year >= 2010) |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
col = "cornflowerblue", size = 1.1) +
theme_classic() +
labs(x = "Year", y = "Happiness score", title = "Australia's decreasing happiness trend")
happiness |>
filter(country_name == "Australia", year >= 2010) |>
ggplot() +
geom_line(aes(x = year, y = life_ladder),
col = "firebrick", size = 1.1) +
theme_classic() +
labs(x = "Year", y = "Happiness score", title = "Australia's decreasing happiness trend")
